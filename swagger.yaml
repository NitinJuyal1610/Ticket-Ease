openapi: 3.0.0

tags:
- name: auth
  description: auth API
- name: tickets
  description: tickets API
- name: users
  description: users API


paths:

# [POST] signup
  /signup:
    post:
      tags:
      - auth
      summary: create new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] login
  /login:
    post:
      tags:
      - auth
      summary: login to existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] logout
  /logout:
    post:
      tags:
      - auth
      summary: logout from existing account
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] tickets
  /tickets:
    get:
      tags:
      - tickets
      summary: Find All Tickets
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
        404:
          description: 'Not Found'
        401:
          description: 'Unauthorized'


# [POST] tickets
    post:
      tags:
      - tickets
      summary: Create New Ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/tickets'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        403:
          description: 'Forbidden'
        500:
          description: 'Server Error'

# [GET] tickets/id
  /tickets/{id}:
    get:
      tags:
      - tickets
      summary: Find Ticket By Id
      parameters:
      - name: id
        in: path
        description: ticket Id
        required: true
      responses:
        200:
          description: 'OK'
        404:
          description: 'Not Found'
        403:
          description: 'Forbidden'
        500:
          description: 'Server Error'
        

# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/users'
      responses:
        200:
          description: OK - User updated successfully
        400:
          description: Bad Request - Invalid input data
        409:
          description: Conflict - User not found or update failed
        500:
          description: Internal Server Error - Something went wrong on the server

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/agents
  /users/agents:
    get:
      tags:
      - users
      summary: Find All Agents
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'


# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
        - role
    properties:
      email:
        type: string
        description: user Email
        example: nj@gmail.com
      password:
        type: string
        description: user Password
        example: aohifha11389
      role:
        type: string
        description: user Role
        example: admin
        enum: [admin, user, agent]
  
  tickets:
    type: object
    required:
        - title
        - description
        - priority
        - category
    properties:
      title:
        type: string
        description: ticket title
        example: ticketTitle
      description:
        type: string
        description: ticket description
        example: ticketDescription
      priority:
        type: string
        description: ticket priority
        enum: [low, medium, high]
      category:
        type: string
        description: ticket category
        enum: ['Login/Authentication Issue','UI/UX Feedback','Performance Problem','Broken Links','Error Messages','Compatibility Issue','Missing or Incorrect Data','Feature Malfunction','Spelling or Grammar Mistakes','General Inquiry','Other']


schemes:
 - https
 - http
